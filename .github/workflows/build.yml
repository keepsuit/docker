name: build

on:
  push:
    branches:
      - master
  schedule:
    - cron: "0 12 * * 0"
  workflow_dispatch:

jobs:
  php:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - tag: "8.3-fpm-alpine"
            alias: "8.3-fpm"
            dockerfile: php-fpm.Dockerfile
            php_version: "8.3"
            os_variant: "alpine"
          - tag: "8.3-fpm-debian"
            dockerfile: php-fpm.Dockerfile
            php_version: "8.3"
            os_variant: "debian"
          - tag: "8.4-fpm-alpine"
            alias: "8.4-fpm"
            dockerfile: php-fpm.Dockerfile
            php_version: "8.4"
            os_variant: "alpine"
          - tag: "8.4-fpm-debian"
            dockerfile: php-fpm.Dockerfile
            php_version: "8.4"
            os_variant: "debian"
          - tag: "dev-8.4-frankenphp-debian"
            dockerfile: php-frankenphp.Dockerfile
            php_version: "8.4"
            os_variant: "debian"

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker hub
        uses: docker/login-action@v3
        with:
          username: cappuc
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Prepare tags
        id: prepare_tags
        run: |
          echo "tags<<EOF" >> $GITHUB_OUTPUT
          echo "keepsuit/php:${{ matrix.tag }}" >> $GITHUB_OUTPUT
          if [ -n "${{ matrix.alias }}" ]; then
            echo "keepsuit/php:${{ matrix.alias }}" >> $GITHUB_OUTPUT
          fi
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Build docker image
        uses: docker/build-push-action@v6
        with:
          context: ./php
          file: ./php/${{ matrix.dockerfile }}
          build-args: |
            PHP_VERSION=${{ matrix.php_version }}
            OS_VARIANT=${{ matrix.os_variant }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha,scope=php-${{ matrix.tag }}
          cache-to: type=gha,scope=php-${{ matrix.tag }},mode=min
          push: true
          tags: ${{ steps.prepare_tags.outputs.tags }}

  puppeteer:
    runs-on: ubuntu-latest
    needs: [php]

    strategy:
      matrix:
        php: ["8.3", "8.4"]
        variant: ["fpm-debian", "fpm-alpine"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker hub
        uses: docker/login-action@v3
        with:
          username: cappuc
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build docker image
        uses: docker/build-push-action@v6
        with:
          context: ./php
          file: ./php/puppeteer.Dockerfile
          build-args: |
            IMAGE_TAG=${{ matrix.php }}-${{ matrix.variant }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: keepsuit/php:${{ matrix.php }}-${{ matrix.variant }}-puppeteer

  # laravel-app:
  #   runs-on: ubuntu-latest
  #   needs: [php]

  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       include:
  #         - tag: "8.2"
  #           dockerfile: php82.Dockerfile
  #         - tag: "8.3"
  #           dockerfile: php83.Dockerfile
  #         - tag: "8.4"
  #           dockerfile: php84.Dockerfile

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v5

  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v3

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Login to Docker hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: cappuc
  #         password: ${{ secrets.DOCKER_HUB_TOKEN }}

  #     - name: Build docker image
  #       uses: docker/build-push-action@v6
  #       with:
  #         context: ./laravel-app
  #         file: ./laravel-app/${{ matrix.dockerfile }}
  #         platforms: linux/amd64,linux/arm64
  #         cache-from: type=gha,scope=laravel-app-${{ matrix.tag }}
  #         cache-to: type=gha,scope=laravel-app-${{ matrix.tag }},mode=max
  #         push: true
  #         tags: |
  #           keepsuit/laravel-app:${{ matrix.tag }}
